# Define UI for application that draws a histogram
ui <- fluidPage(
headerPanel("Hello from DataTeka!"),
sidebarPanel(selectInput("Vector", "Select Mean of Distribution",
c(0, 1, 2, 3, 4, 5), selected = 0, multiple = FALSE),
numericInput("n", "n", 50),
actionButton("go", "Go")),
mainPanel(plotOutput("main_plot"),
verbatimTextOutput("stats"))
)
randomVals <- eventReactive(input$go, input$n, input$vector)
v<- function() {
return(rnorm(randomVals(),mean=as.numeric(input$Vector)))
}
}
gapminre_year <- gapminder %>%
filter(year == input$Vector)
library(shiny)
library(gapminder)
library(dplyr)
runApp('ShinyGapminder')
runApp('ShinyGapminder')
gapminre_year <- gapminder %>%
filter(year == input$Vector)
output$main_plot <- renderPlot(
ggplot(gapminder_year, aes(x = gdpPercap, y = lifeExp, col = "red")) +
geom_point(alpha = 0.2, shape = 21, fill = "blue", colour="black", size = 5) +
geom_smooth(method = "lm", se = F, col = "maroon3") +
geom_smooth(method = "loess", se = F, col = "limegreen")
labs (title= "Life Exp. vs. Population Size",
x = "population", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))))
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
gapminre_year <- gapminder %>%
filter(year == 2000)
View(gapminre_year)
gapminre_year <- gapminder %>%
filter(year == "2000")
View(gapminre_year)
gapminder_year <- gapminder %>%
filter(year == 2000"")
gapminder_year <- gapminder %>%
filter(year == "2000")
View(gapminder_year)
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
runApp('ShinyGapminder')
mydata <- function() {
return(gapminder %>% filter(year == Select_year))
}
mydata
runApp('ShinyGapminder')
ggplot(gapminder %>% filter(year == 2003), aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
ggplot(gapminder_year <- gapminder %>% filter(year == 2003), aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
ggplot(gapminder_year <- gapminder %>% filter(year == 2003), aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
ggplot(gapminder_year <- gapminder %>% filter(year == 2003), aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
runApp('ShinyGapminder')
runApp('ShinyGapminder')
shinyUI(fluidPage(
titlePanel("Gapminder Shiny app"),
sidebarLayout(
sidebarPanel("User inputs will be here",
selectInput("select_country",
label = "Country",
choices = list("Chad",
"Iraq",
"Mali")
)
),
mainPanel("My cool graph will go here",
tableOutput("gapminder_table")
)
)
))
output$main_plot <- renderPlot(
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
)
# Define server logic required to draw a histogram
server <- function(input, output) {
Select_year <- eventReactive(input$Year)
mydata <- function() {
return(gapminder %>% filter(year == Select_year))
}
output$main_plot <- renderPlot(
ggplot(gapminder, aes(x = continent, y = lifeExp)) +
geom_boxplot(outlier.colour = "hotpink") +
geom_jitter(position = position_jitter(width = 0.1, height = 0), alpha = .2) +
labs (title= "Life Exp. vs. Continent",
x = "Continent", y = "Life Exp.") +
theme(legend.position = "none",
panel.border = element_rect(fill = NA,
colour = "black",
size = .75),
plot.title=element_text(hjust=0.5))
)
}
# Run the application
shinyApp(ui = ui, server = server)
# Run the application
shinyApp(ui = ui, server = server)
mydata<- function() {
return(gapminder %>% filter(year == Select_year))
}
